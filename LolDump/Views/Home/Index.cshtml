@{
    ViewBag.Title = "Home Page";
}

@using LolDump.Models.Methods
@using LolDump.Models.DataModels
@using LolDump.Models.ApiCall

<html>
<head>
    <style>
        table, td, th {
            border: 1px solid black;
            padding: 2px;
        }

        .infotable {
            float: left;
            margin-top: 5px;
            margin-bottom: 5px;
            margin-right: 5px;
        }

        #sumTable{
          margin-left:15%;
          margin-right:15%;
        }
    </style>
</head>

<body>
    @{
        LoLApiService lolApiService;
        if (IsPost)
        {
            string summonerName = Request["summonerName"];
            lolApiService = new LoLApiService();
            lolApiService.LoLApiSumReq(summonerName);
            lolApiService.LoLApiEntryReq(lolApiService.lolApiDTO.lolApiSummonerModel.id);
            lolApiService.LoLApiTftReq(lolApiService.lolApiDTO.lolApiSummonerModel.id);
            lolApiService.LoLApiMasteryReq(lolApiService.lolApiDTO.lolApiSummonerModel.id);
            lolApiService.LoLApiChampionReq();

            //initial table displaying sumName and sumID
            <table class="infotable" id="sumTable">
                    <tr>
                        <th>Summoner Details</th>
                    </tr>
                <tr>
                    <td>Name</td>
                    <td>@lolApiService.lolApiDTO.lolApiSummonerModel.name</td>
                </tr>
                <tr>
                    <td>Level</td>
                    <td>@lolApiService.lolApiDTO.lolApiSummonerModel.summonerLevel</td>
                </tr>
                <tr>
                    <td>Icon Id</td>
                    <td>@lolApiService.lolApiDTO.lolApiSummonerModel.profileIconId</td>
                </tr>
                <tr>
                    <td>Last modified</td>
                    <td>@Methods.FromUnixTime(lolApiService.lolApiDTO.lolApiSummonerModel.revisionDate)</td>
                </tr>
                <tr>
                    <td>Summoner Id</td>
                    <td>@lolApiService.lolApiDTO.lolApiSummonerModel.id</td>
                </tr>
                <tr>
                    <td>Account Id</td>
                    <td>@lolApiService.lolApiDTO.lolApiSummonerModel.accountId</td>
                </tr>
            </table>

            //try for the two ranked tables
            try
            {
                int x = lolApiService.lolApiDTO.lolLeagueEntryModel[0].wins;
                //Solo Ranked Table
                <table class="infotable" id="soloRankedTable">
                    <tr>
                        <th>Solo Ranked Details</th>
                    </tr>
                    <tr>
                        <td>Wins</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[0].wins</td>
                    </tr>
                    <tr>
                        <td>Losses</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[0].losses</td>
                    </tr>
                    <tr>
                        <td>League Points</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[0].leaguePoints</td>
                    </tr>
                    <tr>
                        <td>Tier</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[0].tier</td>
                    </tr>
                    <tr>
                        <td>Rank</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[0].rank</td>
                    </tr>
                    <tr>
                        <td>Hot Streak</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[0].hotStreak</td>
                    </tr>
                    <tr>
                        <td>Inactive</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[0].inactive</td>
                    </tr>
                    <tr>
                        <td>Veteran</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[0].veteran</td>
                    </tr>
                    <tr>
                        <td>Fresh Blood</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[0].freshBlood</td>
                    </tr>
                    <tr>
                        <td>League Id</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[0].leagueId</td>
                    </tr>
                </table>

                //Flex Ranked Table
                <table class="infotable" id="flexRankedTable">
                    <tr>
                        <th>Flex Ranked Details</th>
                    </tr>
                    <tr>
                        <td>Wins</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[1].wins</td>
                    </tr>
                    <tr>
                        <td>Losses</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[1].losses</td>
                    </tr>
                    <tr>
                        <td>League Points</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[1].leaguePoints</td>
                    </tr>
                    <tr>
                        <td>Tier</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[1].tier</td>
                    </tr>
                    <tr>
                        <td>Rank</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[1].rank</td>
                    </tr>
                    <tr>
                        <td>Hot Streak</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[1].hotStreak</td>
                    </tr>
                    <tr>
                        <td>Inactive</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[1].inactive</td>
                    </tr>
                    <tr>
                        <td>Veteran</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[1].veteran</td>
                    </tr>
                    <tr>
                        <td>Fresh Blood</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[1].freshBlood</td>
                    </tr>
                    <tr>
                        <td>League Id</td>
                        <td>@lolApiService.lolApiDTO.lolLeagueEntryModel[1].leagueId</td>
                    </tr>
                </table>
            }
            catch (System.ArgumentOutOfRangeException ex)
            {
                System.ArgumentOutOfRangeException argEx = new System.ArgumentOutOfRangeException("Player has no ranked history", "index", ex.Message);
            }
            finally
            {
                //int x = lolApiService.lolApiDTO.lolLeagueEntryModel[0].wins;
                if (lolApiService.lolApiDTO.lolLeagueEntryModel.Count == 0)
                {
                    <table class="infotable" id="noRankedTable">
                        <tr>
                            <th>Player has no ranked history</th>
                        </tr>
                    </table>
                }
            }

            //try catch Tft details
            try
            {
                int x = lolApiService.lolApiDTO.lolTftModel[0].wins;
                //Tft Ranked Table
                <table class="infotable" id="tftRankedTable">
                    <tr>
                        <th>Tft Ranked Details</th>
                    </tr>
                    <tr>
                        <td>Wins</td>
                        <td>@lolApiService.lolApiDTO.lolTftModel[0].wins</td>
                    </tr>
                    <tr>
                        <td>Losses</td>
                        <td>@lolApiService.lolApiDTO.lolTftModel[0].losses</td>
                    </tr>
                    <tr>
                        <td>League Points</td>
                        <td>@lolApiService.lolApiDTO.lolTftModel[0].leaguePoints</td>
                    </tr>
                    <tr>
                        <td>Tier</td>
                        <td>@lolApiService.lolApiDTO.lolTftModel[0].tier</td>
                    </tr>
                    <tr>
                        <td>Rank</td>
                        <td>@lolApiService.lolApiDTO.lolTftModel[0].rank</td>
                    </tr>
                    <tr>
                        <td>Hot Streak</td>
                        <td>@lolApiService.lolApiDTO.lolTftModel[0].hotStreak</td>
                    </tr>
                    <tr>
                        <td>Inactive</td>
                        <td>@lolApiService.lolApiDTO.lolTftModel[0].inactive</td>
                    </tr>
                    <tr>
                        <td>Veteran</td>
                        <td>@lolApiService.lolApiDTO.lolTftModel[0].veteran</td>
                    </tr>
                    <tr>
                        <td>Fresh Blood</td>
                        <td>@lolApiService.lolApiDTO.lolTftModel[0].freshBlood</td>
                    </tr>
                    <tr>
                        <td>League Id</td>
                        <td>@lolApiService.lolApiDTO.lolTftModel[0].leagueId</td>
                    </tr>
                </table>
            }
            catch (System.ArgumentOutOfRangeException ex)
            {
                System.ArgumentOutOfRangeException argEx = new System.ArgumentOutOfRangeException("Player has no ranked history", "index", ex.Message);
            }
            finally
            {
                if (lolApiService.lolApiDTO.lolLeagueEntryModel.Count == 0)
                {
                    <table class="infotable" id="noTftRankedTable">
                        <tr>
                            <th>Player has no tft ranked history</th>
                        </tr>
                    </table>
                }
            }
        }
        else
        {
            <form method="post" action="">
                Summoner Name:<br>
                <input type="text" name="summonerName" value="">
                <input type="submit" value="Search" class="submit">
            </form>
        }
    }

</body>
</html>